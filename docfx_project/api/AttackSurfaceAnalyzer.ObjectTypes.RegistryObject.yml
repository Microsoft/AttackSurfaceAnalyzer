### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  commentId: T:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  id: RegistryObject
  parent: AttackSurfaceAnalyzer.ObjectTypes
  children:
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor(Microsoft.Win32.RegistryKey,System.Boolean)
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor(Microsoft.Win32.RegistryKey,System.String,System.String,System.Boolean)
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Contents
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.IsKey
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Key
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Path
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString
  - AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Value
  langs:
  - csharp
  - vb
  name: RegistryObject
  nameWithType: RegistryObject
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  type: Class
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RegistryObject
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 8
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public class RegistryObject
    content.vb: Public Class RegistryObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Key
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Key
  id: Key
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: RegistryObject.Key
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Key
  type: Field
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Key
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 11
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public RegistryKey Key
    return:
      type: Microsoft.Win32.RegistryKey
    content.vb: Public Key As RegistryKey
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Path
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Path
  id: Path
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: RegistryObject.Path
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Path
  type: Field
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Path
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 13
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string Path
    return:
      type: System.String
    content.vb: Public Path As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.IsKey
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.IsKey
  id: IsKey
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: IsKey
  nameWithType: RegistryObject.IsKey
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.IsKey
  type: Field
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsKey
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 14
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public bool IsKey
    return:
      type: System.Boolean
    content.vb: Public IsKey As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Value
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Value
  id: Value
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: RegistryObject.Value
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Value
  type: Field
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Value
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 15
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string Value
    return:
      type: System.String
    content.vb: Public Value As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Contents
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Contents
  id: Contents
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: Contents
  nameWithType: RegistryObject.Contents
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.Contents
  type: Field
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Contents
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 16
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string Contents
    return:
      type: System.String
    content.vb: Public Contents As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey
  commentId: P:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey
  id: RowKey
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: RowKey
  nameWithType: RegistryObject.RowKey
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey
  type: Property
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RowKey
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 18
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string RowKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RowKey As String
  overload: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString
  id: ToString
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RegistryObject.ToString()
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString()
  type: Method
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ToString
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 26
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor(Microsoft.Win32.RegistryKey,System.Boolean)
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor(Microsoft.Win32.RegistryKey,System.Boolean)
  id: '#ctor(Microsoft.Win32.RegistryKey,System.Boolean)'
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: RegistryObject(RegistryKey, Boolean)
  nameWithType: RegistryObject.RegistryObject(RegistryKey, Boolean)
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RegistryObject(Microsoft.Win32.RegistryKey, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 31
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public RegistryObject(RegistryKey Key, bool isKey)
    parameters:
    - id: Key
      type: Microsoft.Win32.RegistryKey
    - id: isKey
      type: System.Boolean
    content.vb: Public Sub New(Key As RegistryKey, isKey As Boolean)
  overload: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor(Microsoft.Win32.RegistryKey,System.String,System.String,System.Boolean)
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor(Microsoft.Win32.RegistryKey,System.String,System.String,System.Boolean)
  id: '#ctor(Microsoft.Win32.RegistryKey,System.String,System.String,System.Boolean)'
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: RegistryObject(RegistryKey, String, String, Boolean)
  nameWithType: RegistryObject.RegistryObject(RegistryKey, String, String, Boolean)
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RegistryObject(Microsoft.Win32.RegistryKey, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 33
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public RegistryObject(RegistryKey Key, string Value, string Contents, bool isKey)
    parameters:
    - id: Key
      type: Microsoft.Win32.RegistryKey
    - id: Value
      type: System.String
    - id: Contents
      type: System.String
    - id: isKey
      type: System.Boolean
    content.vb: Public Sub New(Key As RegistryKey, Value As String, Contents As String, isKey As Boolean)
  overload: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor
  id: '#ctor'
  parent: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject
  langs:
  - csharp
  - vb
  name: RegistryObject()
  nameWithType: RegistryObject.RegistryObject()
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RegistryObject()
  type: Constructor
  source:
    remote:
      path: Lib/Objects/RegistryObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Objects/RegistryObject.cs
    startLine: 41
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public RegistryObject()
    content.vb: Public Sub New
  overload: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AttackSurfaceAnalyzer.ObjectTypes
  commentId: N:AttackSurfaceAnalyzer.ObjectTypes
  name: AttackSurfaceAnalyzer.ObjectTypes
  nameWithType: AttackSurfaceAnalyzer.ObjectTypes
  fullName: AttackSurfaceAnalyzer.ObjectTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Win32.RegistryKey
  commentId: T:Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: true
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: Microsoft.Win32
  commentId: N:Microsoft.Win32
  isExternal: true
  name: Microsoft.Win32
  nameWithType: Microsoft.Win32
  fullName: Microsoft.Win32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey
  name: RowKey
  nameWithType: RegistryObject.RowKey
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RowKey
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString
  name: ToString
  nameWithType: RegistryObject.ToString
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.ToString
- uid: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.#ctor
  name: RegistryObject
  nameWithType: RegistryObject.RegistryObject
  fullName: AttackSurfaceAnalyzer.ObjectTypes.RegistryObject.RegistryObject
