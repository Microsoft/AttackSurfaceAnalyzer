### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  commentId: T:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  id: FileSystemMonitor
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem
  children:
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor(System.String,System.String,System.Boolean)
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor(System.String,System.String,System.Boolean,System.IO.NotifyFilters)
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType(System.IO.WatcherChangeTypes)
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFilters
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFiltersWithAccessTime
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler(System.Action{System.EventArgs})
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate(System.String)
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs)
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs,System.String)
  - AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename(System.IO.RenamedEventArgs)
  langs:
  - csharp
  - vb
  name: FileSystemMonitor
  nameWithType: FileSystemMonitor
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  type: Class
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: FileSystemMonitor
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 12
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: 'public class FileSystemMonitor : BaseMonitor, PlatformRunnable'
    content.vb: >-
      Public Class FileSystemMonitor
          Inherits BaseMonitor
          Implements PlatformRunnable
  inheritance:
  - System.Object
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor
  inheritedMembers:
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFilters
  commentId: F:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFilters
  id: defaultFilters
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: defaultFilters
  nameWithType: FileSystemMonitor.defaultFilters
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFilters
  type: Field
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: defaultFilters
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 19
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public static readonly NotifyFilters defaultFilters
    return:
      type: System.IO.NotifyFilters
    content.vb: Public Shared ReadOnly defaultFilters As NotifyFilters
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFiltersWithAccessTime
  commentId: F:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFiltersWithAccessTime
  id: defaultFiltersWithAccessTime
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: defaultFiltersWithAccessTime
  nameWithType: FileSystemMonitor.defaultFiltersWithAccessTime
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.defaultFiltersWithAccessTime
  type: Field
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: defaultFiltersWithAccessTime
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 27
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public static readonly NotifyFilters defaultFiltersWithAccessTime
    return:
      type: System.IO.NotifyFilters
    content.vb: Public Shared ReadOnly defaultFiltersWithAccessTime As NotifyFilters
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start
  id: Start
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: FileSystemMonitor.Start()
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start()
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Start
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 33
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public override void Start()
    content.vb: Public Overrides Sub Start
  overridden: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop
  id: Stop
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: FileSystemMonitor.Stop()
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop()
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Stop
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 39
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public override void Stop()
    content.vb: Public Overrides Sub Stop
  overridden: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform
  id: CanRunOnPlatform
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: CanRunOnPlatform()
  nameWithType: FileSystemMonitor.CanRunOnPlatform()
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform()
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: CanRunOnPlatform
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 45
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public override bool CanRunOnPlatform()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanRunOnPlatform As Boolean
  overridden: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate(System.String)
  id: Truncate(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: Truncate(String)
  nameWithType: FileSystemMonitor.Truncate(String)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Truncate
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 50
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public void Truncate(string runid)
    parameters:
    - id: runid
      type: System.String
    content.vb: Public Sub Truncate(runid As String)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor(System.String,System.String,System.Boolean)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: FileSystemMonitor(String, String, Boolean)
  nameWithType: FileSystemMonitor.FileSystemMonitor(String, String, Boolean)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.FileSystemMonitor(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 57
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public FileSystemMonitor(string runId, string dir, bool interrogateChanges)
    parameters:
    - id: runId
      type: System.String
    - id: dir
      type: System.String
    - id: interrogateChanges
      type: System.Boolean
    content.vb: Public Sub New(runId As String, dir As String, interrogateChanges As Boolean)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor(System.String,System.String,System.Boolean,System.IO.NotifyFilters)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor(System.String,System.String,System.Boolean,System.IO.NotifyFilters)
  id: '#ctor(System.String,System.String,System.Boolean,System.IO.NotifyFilters)'
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: FileSystemMonitor(String, String, Boolean, NotifyFilters)
  nameWithType: FileSystemMonitor.FileSystemMonitor(String, String, Boolean, NotifyFilters)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.FileSystemMonitor(System.String, System.String, System.Boolean, System.IO.NotifyFilters)
  type: Constructor
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 62
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public FileSystemMonitor(string runId, string dir, bool interrogateChanges, NotifyFilters filters)
    parameters:
    - id: runId
      type: System.String
    - id: dir
      type: System.String
    - id: interrogateChanges
      type: System.Boolean
    - id: filters
      type: System.IO.NotifyFilters
    content.vb: Public Sub New(runId As String, dir As String, interrogateChanges As Boolean, filters As NotifyFilters)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning
  id: IsRunning
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: IsRunning()
  nameWithType: FileSystemMonitor.IsRunning()
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning()
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsRunning
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 85
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public bool IsRunning()
    return:
      type: System.Boolean
    content.vb: Public Function IsRunning As Boolean
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs)
  id: WriteChange(System.IO.FileSystemEventArgs)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: WriteChange(FileSystemEventArgs)
  nameWithType: FileSystemMonitor.WriteChange(FileSystemEventArgs)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: WriteChange
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 90
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public void WriteChange(FileSystemEventArgs obj)
    parameters:
    - id: obj
      type: System.IO.FileSystemEventArgs
    content.vb: Public Sub WriteChange(obj As FileSystemEventArgs)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType(System.IO.WatcherChangeTypes)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType(System.IO.WatcherChangeTypes)
  id: ChangeTypeToChangeType(System.IO.WatcherChangeTypes)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: ChangeTypeToChangeType(WatcherChangeTypes)
  nameWithType: FileSystemMonitor.ChangeTypeToChangeType(WatcherChangeTypes)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType(System.IO.WatcherChangeTypes)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ChangeTypeToChangeType
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 131
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public CHANGE_TYPE ChangeTypeToChangeType(WatcherChangeTypes changeType)
    parameters:
    - id: changeType
      type: System.IO.WatcherChangeTypes
    return:
      type: AttackSurfaceAnalyzer.ObjectTypes.CHANGE_TYPE
    content.vb: Public Function ChangeTypeToChangeType(changeType As WatcherChangeTypes) As CHANGE_TYPE
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs,System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs,System.String)
  id: WriteChange(System.IO.FileSystemEventArgs,System.String)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: WriteChange(FileSystemEventArgs, String)
  nameWithType: FileSystemMonitor.WriteChange(FileSystemEventArgs, String)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange(System.IO.FileSystemEventArgs, System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: WriteChange
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 148
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public void WriteChange(FileSystemEventArgs obj, string details)
    parameters:
    - id: obj
      type: System.IO.FileSystemEventArgs
    - id: details
      type: System.String
    content.vb: Public Sub WriteChange(obj As FileSystemEventArgs, details As String)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename(System.IO.RenamedEventArgs)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename(System.IO.RenamedEventArgs)
  id: WriteRename(System.IO.RenamedEventArgs)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: WriteRename(RenamedEventArgs)
  nameWithType: FileSystemMonitor.WriteRename(RenamedEventArgs)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename(System.IO.RenamedEventArgs)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: WriteRename
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 174
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public void WriteRename(RenamedEventArgs obj)
    parameters:
    - id: obj
      type: System.IO.RenamedEventArgs
    content.vb: Public Sub WriteRename(obj As RenamedEventArgs)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler(System.Action{System.EventArgs})
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler(System.Action{System.EventArgs})
  id: SetCustomChangeHandler(System.Action{System.EventArgs})
  parent: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor
  langs:
  - csharp
  - vb
  name: SetCustomChangeHandler(Action<EventArgs>)
  nameWithType: FileSystemMonitor.SetCustomChangeHandler(Action<EventArgs>)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler(System.Action<System.EventArgs>)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystem/FileSystemMonitor.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: SetCustomChangeHandler
    path: ../Lib/Collectors/FileSystem/FileSystemMonitor.cs
    startLine: 240
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.FileSystem
  syntax:
    content: public void SetCustomChangeHandler(Action<EventArgs> handler)
    parameters:
    - id: handler
      type: System.Action{System.EventArgs}
    content.vb: Public Sub SetCustomChangeHandler(handler As Action(Of EventArgs))
  overload: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler*
  nameWithType.vb: FileSystemMonitor.SetCustomChangeHandler(Action(Of EventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler(System.Action(Of System.EventArgs))
  name.vb: SetCustomChangeHandler(Action(Of EventArgs))
references:
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem
  commentId: N:AttackSurfaceAnalyzer.Collectors.FileSystem
  name: AttackSurfaceAnalyzer.Collectors.FileSystem
  nameWithType: AttackSurfaceAnalyzer.Collectors.FileSystem
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  commentId: T:AttackSurfaceAnalyzer.Collectors.BaseMonitor
  parent: AttackSurfaceAnalyzer.Collectors
  name: BaseMonitor
  nameWithType: BaseMonitor
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
  commentId: F:AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: runId
  nameWithType: BaseMonitor.runId
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
  commentId: F:AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: _running
  nameWithType: BaseMonitor._running
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: RunStatus()
  nameWithType: BaseMonitor.RunStatus()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
    name: RunStatus
    nameWithType: BaseMonitor.RunStatus
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
    name: RunStatus
    nameWithType: BaseMonitor.RunStatus
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AttackSurfaceAnalyzer.Collectors
  commentId: N:AttackSurfaceAnalyzer.Collectors
  name: AttackSurfaceAnalyzer.Collectors
  nameWithType: AttackSurfaceAnalyzer.Collectors
  fullName: AttackSurfaceAnalyzer.Collectors
- uid: System.IO.NotifyFilters
  commentId: T:System.IO.NotifyFilters
  parent: System.IO
  isExternal: true
  name: NotifyFilters
  nameWithType: NotifyFilters
  fullName: System.IO.NotifyFilters
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: Start()
  nameWithType: BaseMonitor.Start()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
    name: Start
    nameWithType: BaseMonitor.Start
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
    name: Start
    nameWithType: BaseMonitor.Start
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start
  name: Start
  nameWithType: FileSystemMonitor.Start
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Start
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: Stop()
  nameWithType: BaseMonitor.Stop()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
    name: Stop
    nameWithType: BaseMonitor.Stop
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
    name: Stop
    nameWithType: BaseMonitor.Stop
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop
  name: Stop
  nameWithType: FileSystemMonitor.Stop
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Stop
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: CanRunOnPlatform()
  nameWithType: BaseMonitor.CanRunOnPlatform()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
    name: CanRunOnPlatform
    nameWithType: BaseMonitor.CanRunOnPlatform
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
    name: CanRunOnPlatform
    nameWithType: BaseMonitor.CanRunOnPlatform
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform
  name: CanRunOnPlatform
  nameWithType: FileSystemMonitor.CanRunOnPlatform
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.CanRunOnPlatform
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate
  name: Truncate
  nameWithType: FileSystemMonitor.Truncate
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.Truncate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.#ctor
  name: FileSystemMonitor
  nameWithType: FileSystemMonitor.FileSystemMonitor
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.FileSystemMonitor
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning
  name: IsRunning
  nameWithType: FileSystemMonitor.IsRunning
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.IsRunning
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange
  name: WriteChange
  nameWithType: FileSystemMonitor.WriteChange
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteChange
- uid: System.IO.FileSystemEventArgs
  commentId: T:System.IO.FileSystemEventArgs
  parent: System.IO
  isExternal: true
  name: FileSystemEventArgs
  nameWithType: FileSystemEventArgs
  fullName: System.IO.FileSystemEventArgs
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType
  name: ChangeTypeToChangeType
  nameWithType: FileSystemMonitor.ChangeTypeToChangeType
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.ChangeTypeToChangeType
- uid: System.IO.WatcherChangeTypes
  commentId: T:System.IO.WatcherChangeTypes
  parent: System.IO
  isExternal: true
  name: WatcherChangeTypes
  nameWithType: WatcherChangeTypes
  fullName: System.IO.WatcherChangeTypes
- uid: AttackSurfaceAnalyzer.ObjectTypes.CHANGE_TYPE
  commentId: T:AttackSurfaceAnalyzer.ObjectTypes.CHANGE_TYPE
  parent: AttackSurfaceAnalyzer.ObjectTypes
  name: CHANGE_TYPE
  nameWithType: CHANGE_TYPE
  fullName: AttackSurfaceAnalyzer.ObjectTypes.CHANGE_TYPE
- uid: AttackSurfaceAnalyzer.ObjectTypes
  commentId: N:AttackSurfaceAnalyzer.ObjectTypes
  name: AttackSurfaceAnalyzer.ObjectTypes
  nameWithType: AttackSurfaceAnalyzer.ObjectTypes
  fullName: AttackSurfaceAnalyzer.ObjectTypes
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename
  name: WriteRename
  nameWithType: FileSystemMonitor.WriteRename
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.WriteRename
- uid: System.IO.RenamedEventArgs
  commentId: T:System.IO.RenamedEventArgs
  parent: System.IO
  isExternal: true
  name: RenamedEventArgs
  nameWithType: RenamedEventArgs
  fullName: System.IO.RenamedEventArgs
- uid: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler
  name: SetCustomChangeHandler
  nameWithType: FileSystemMonitor.SetCustomChangeHandler
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystem.FileSystemMonitor.SetCustomChangeHandler
- uid: System.Action{System.EventArgs}
  commentId: T:System.Action{System.EventArgs}
  parent: System
  definition: System.Action`1
  name: Action<EventArgs>
  nameWithType: Action<EventArgs>
  fullName: System.Action<System.EventArgs>
  nameWithType.vb: Action(Of EventArgs)
  fullName.vb: System.Action(Of System.EventArgs)
  name.vb: Action(Of EventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
