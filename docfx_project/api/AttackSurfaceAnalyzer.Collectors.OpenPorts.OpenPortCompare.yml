### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare
  commentId: T:AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare
  id: OpenPortCompare
  parent: AttackSurfaceAnalyzer.Collectors.OpenPorts
  children:
  - AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.#ctor
  - AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare(System.String,System.String)
  langs:
  - csharp
  - vb
  name: OpenPortCompare
  nameWithType: OpenPortCompare
  fullName: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare
  type: Class
  source:
    remote:
      path: Lib/Collectors/OpenPorts/OpenPortCompare.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: OpenPortCompare
    path: ../Lib/Collectors/OpenPorts/OpenPortCompare.cs
    startLine: 10
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.OpenPorts
  syntax:
    content: 'public class OpenPortCompare : BaseCompare'
    content.vb: >-
      Public Class OpenPortCompare
          Inherits BaseCompare
  inheritance:
  - System.Object
  - AttackSurfaceAnalyzer.Collectors.BaseCompare
  inheritedMembers:
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.Results
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare(System.String,System.String)
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult(AttackSurfaceAnalyzer.ObjectTypes.CompareResult)
  - AttackSurfaceAnalyzer.Collectors.BaseCompare._type
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
  - AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.#ctor
  commentId: M:AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.#ctor
  id: '#ctor'
  parent: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare
  langs:
  - csharp
  - vb
  name: OpenPortCompare()
  nameWithType: OpenPortCompare.OpenPortCompare()
  fullName: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.OpenPortCompare()
  type: Constructor
  source:
    remote:
      path: Lib/Collectors/OpenPorts/OpenPortCompare.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Collectors/OpenPorts/OpenPortCompare.cs
    startLine: 25
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.OpenPorts
  syntax:
    content: public OpenPortCompare()
    content.vb: Public Sub New
  overload: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare(System.String,System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare(System.String,System.String)
  id: Compare(System.String,System.String)
  parent: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare
  langs:
  - csharp
  - vb
  name: Compare(String, String)
  nameWithType: OpenPortCompare.Compare(String, String)
  fullName: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare(System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/OpenPorts/OpenPortCompare.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Compare
    path: ../Lib/Collectors/OpenPorts/OpenPortCompare.cs
    startLine: 36
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Collectors.OpenPorts
  syntax:
    content: public override void Compare(string firstRunId, string secondRunId)
    parameters:
    - id: firstRunId
      type: System.String
    - id: secondRunId
      type: System.String
    content.vb: Public Overrides Sub Compare(firstRunId As String, secondRunId As String)
  overridden: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare(System.String,System.String)
  overload: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AttackSurfaceAnalyzer.Collectors.OpenPorts
  commentId: N:AttackSurfaceAnalyzer.Collectors.OpenPorts
  name: AttackSurfaceAnalyzer.Collectors.OpenPorts
  nameWithType: AttackSurfaceAnalyzer.Collectors.OpenPorts
  fullName: AttackSurfaceAnalyzer.Collectors.OpenPorts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare
  commentId: T:AttackSurfaceAnalyzer.Collectors.BaseCompare
  parent: AttackSurfaceAnalyzer.Collectors
  name: BaseCompare
  nameWithType: BaseCompare
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Results
  commentId: P:AttackSurfaceAnalyzer.Collectors.BaseCompare.Results
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: Results
  nameWithType: BaseCompare.Results
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Results
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare(System.String,System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare(System.String,System.String)
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  isExternal: true
  name: TryCompare(String, String)
  nameWithType: BaseCompare.TryCompare(String, String)
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare(System.String, System.String)
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare(System.String,System.String)
    name: TryCompare
    nameWithType: BaseCompare.TryCompare
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare(System.String,System.String)
    name: TryCompare
    nameWithType: BaseCompare.TryCompare
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.TryCompare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult(AttackSurfaceAnalyzer.ObjectTypes.CompareResult)
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult(AttackSurfaceAnalyzer.ObjectTypes.CompareResult)
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: InsertResult(CompareResult)
  nameWithType: BaseCompare.InsertResult(CompareResult)
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult(AttackSurfaceAnalyzer.ObjectTypes.CompareResult)
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult(AttackSurfaceAnalyzer.ObjectTypes.CompareResult)
    name: InsertResult
    nameWithType: BaseCompare.InsertResult
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: AttackSurfaceAnalyzer.ObjectTypes.CompareResult
    name: CompareResult
    nameWithType: CompareResult
    fullName: AttackSurfaceAnalyzer.ObjectTypes.CompareResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult(AttackSurfaceAnalyzer.ObjectTypes.CompareResult)
    name: InsertResult
    nameWithType: BaseCompare.InsertResult
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.InsertResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: AttackSurfaceAnalyzer.ObjectTypes.CompareResult
    name: CompareResult
    nameWithType: CompareResult
    fullName: AttackSurfaceAnalyzer.ObjectTypes.CompareResult
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare._type
  commentId: F:AttackSurfaceAnalyzer.Collectors.BaseCompare._type
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: _type
  nameWithType: BaseCompare._type
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare._type
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: IsRunning()
  nameWithType: BaseCompare.IsRunning()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
    name: IsRunning
    nameWithType: BaseCompare.IsRunning
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
    name: IsRunning
    nameWithType: BaseCompare.IsRunning
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.IsRunning
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: Start()
  nameWithType: BaseCompare.Start()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Start()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
    name: Start
    nameWithType: BaseCompare.Start
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
    name: Start
    nameWithType: BaseCompare.Start
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: Stop()
  nameWithType: BaseCompare.Stop()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
    name: Stop
    nameWithType: BaseCompare.Stop
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
    name: Stop
    nameWithType: BaseCompare.Stop
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  name: GetNumResults()
  nameWithType: BaseCompare.GetNumResults()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
    name: GetNumResults
    nameWithType: BaseCompare.GetNumResults
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
    name: GetNumResults
    nameWithType: BaseCompare.GetNumResults
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.GetNumResults
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AttackSurfaceAnalyzer.Collectors
  commentId: N:AttackSurfaceAnalyzer.Collectors
  name: AttackSurfaceAnalyzer.Collectors
  nameWithType: AttackSurfaceAnalyzer.Collectors
  fullName: AttackSurfaceAnalyzer.Collectors
- uid: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.#ctor
  name: OpenPortCompare
  nameWithType: OpenPortCompare.OpenPortCompare
  fullName: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.OpenPortCompare
- uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare(System.String,System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare(System.String,System.String)
  parent: AttackSurfaceAnalyzer.Collectors.BaseCompare
  isExternal: true
  name: Compare(String, String)
  nameWithType: BaseCompare.Compare(String, String)
  fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare(System.String, System.String)
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare(System.String,System.String)
    name: Compare
    nameWithType: BaseCompare.Compare
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare(System.String,System.String)
    name: Compare
    nameWithType: BaseCompare.Compare
    fullName: AttackSurfaceAnalyzer.Collectors.BaseCompare.Compare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare
  name: Compare
  nameWithType: OpenPortCompare.Compare
  fullName: AttackSurfaceAnalyzer.Collectors.OpenPorts.OpenPortCompare.Compare
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
