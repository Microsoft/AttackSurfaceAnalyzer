@using RazorLight
@using AttackSurfaceAnalyzer.Objects
@using Newtonsoft.Json

<!doctype html>
<html class="no-js" lang="">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Attack Surface Analyzer</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/css/bootstrap.min.css" integrity="sha384-Zug+QiDoJOrZ5t4lssLdxGhVrurbmBWopoEl+M6BdEfwnCJZtKxi1KgxUyJq13dy" crossorigin="anonymous">
    <link rel="stylesheet" href="css/main.css">
</head>

<body>

    <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
        <a class="navbar-brand" href="#">Attack Surface Analyzer</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">FAQ</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <nav class="col-sm-3 col-md-2 d-none d-sm-block bg-light sidebar">
                <ul class="nav nav-pills flex-column">
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_summary" role="button">Overview</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_file_system" role="button">File System</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_services" role="button">Services</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_open_ports" role="button">Open Ports</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_user_accounts" role="button">User Accounts</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_registry" role="button">Registry</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-internal-link="replace" href="#section_certificates" role="button">Certificates</a>
                    </li>
                </ul>
                <ul class="nav nav-pills flex-column">
                    <li class="nav-item">
                        <a class="nav-link disabled" data-internal-link="replace" href="#export_sarif" role="button">Export SARIF</a>
                    </li>
                </ul>
            </nav>

            <main role="main" class="col-sm-9 ml-sm-auto col-md-10 pt-3">
            </main>

            <div class="d-none">
                <div id="section_summary">
                    <h1>Summary</h1>
                    <p>
                        <strong>This is the comparison between @Model["BeforeRunId"] and @Model["AfterRunId"].</strong>
                    </p>
                </div>

                <div id="section_file_system">
                    <h1>File System</h1>

                    The following files were changed between runs <strong>@Model["BeforeRunId"]</strong> and <strong>@Model["AfterRunId"]</strong>.
                    @{
                        /*
                            <div class="dropdown float-right show">
                            <a class="btn btn-sm btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Filter Results
                            </a>

                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item" href="#">Interesting</a>
                                <a class="dropdown-item" href="#">Uninteresting</a>
                                <a class="dropdown-item" href="#">Show All</a>
                            </div>
                        </div>
                        */

                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Status</th>
                                        <th>Analysis</th>
                                        <th>Path</th>
                                        <th>Permissions</th>
                                        <th>Size</th>
                                        <th>Content Hash</th>
                                        <th>Signature</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ContainsKey("FILE_DELETED"))
                                    {
                                        @foreach (FileSystemResult i in Model["FILE_DELETED"])
                                        {
                                            <tr>
                                                <td>Deleted</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((FileSystemObject)i.Base).Path)</td>
                                                <td>@(((FileSystemObject)i.Base).Permissions)</td>
                                                <td>@string.Format("{0:N0}", ((FileSystemObject)i.Base).Size))</td>
                                                <td>@(((FileSystemObject)i.Base).ContentHash)</td>
                                                <td>@(((FileSystemObject)i.Base).SignatureStatus)</td>
                                            </tr>
                                        }
                                    }

                                    @if (Model.ContainsKey("FILE_CREATED"))
                                    {
                                        @foreach (FileSystemResult i in Model["FILE_CREATED"])
                                        {
                                            <tr>
                                                <td>New</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((FileSystemObject)i.Compare).Path)</td>
                                                <td>@(((FileSystemObject)i.Compare).Permissions)</td>
                                                <td>@string.Format("{0:N0}", ((FileSystemObject)i.Compare).Size))</td>
                                                <td>@(((FileSystemObject)i.Compare).ContentHash)</td>
                                                <td>@(((FileSystemObject)i.Compare).SignatureStatus)</td>
                                            </tr>
                                        }
                                    }

                                    @if (Model.ContainsKey("FILE_MODIEID"))
                                    {
                                        @foreach (FileSystemResult i in Model["FILE_MODIFIED"])
                                        {
                                            <tr>
                                                <td>Modified:Before</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((FileSystemObject)i.Base).Path)</td>
                                                <td>@(((FileSystemObject)i.Base).Permissions)</td>
                                                <td>@string.Format("{0:N0}", ((FileSystemObject)i.Base).Size))</td>
                                                <td>@(((FileSystemObject)i.Base).ContentHash)</td>
                                                <td>@(((FileSystemObject)i.Base).SignatureStatus)</td>
                                            </tr>
                                            <tr>
                                                <td>Modified:After</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((FileSystemObject)i.Compare).Path)</td>
                                                <td>@(((FileSystemObject)i.Compare).Permissions)</td>
                                                <td>@string.Format("{0:N0}", ((FileSystemObject)i.Compare).Size))</td>
                                                <td>@(((FileSystemObject)i.Compare).ContentHash)</td>
                                                <td>@(((FileSystemObject)i.Compare).SignatureStatus)</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>

                    }
                </div>

                <div id="section_services">
                    <h1>Services</h1>

                    The following services were changed between runs <strong>@Model["BeforeRunId"]</strong> and <strong>@Model["AfterRunId"]</strong>.
                    @{
                        if (Model.ContainsKey("SERVICE_CREATED") || Model.ContainsKey("SERVICE_MODIFIED") || Model.ContainsKey("SERVICE_DELETED"))
                        {
                            <div class="dropdown float-right show">
                                <a class="btn btn-sm btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Filter Results
                                </a>

                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <a class="dropdown-item" href="#">Interesting</a>
                                    <a class="dropdown-item" href="#">Uninteresting</a>
                                    <a class="dropdown-item" href="#">Show All</a>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Analysis</th>
                                            <th>Service Name</th>
                                            <th>Display Name</th>
                                            <th>Start Type</th>
                                            <th>Current State</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ContainsKey("SERVICE_DELETED"))
                                        {
                                            @foreach (CompareResult i in Model["SERVICE_DELETED"])
                                            {
                                                <tr>
                                                    <td>Deleted</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((ServiceObject)i.Base).ServiceName)</td>
                                                    <td>@(((ServiceObject)i.Base).DisplayName)</td>
                                                    <td>@(((ServiceObject)i.Base).StartType)</td>
                                                    <td>@(((ServiceObject)i.Base).CurrentState)</td>
                                                </tr>
                                            }
                                        }
                                        @if (Model.ContainsKey("SERVICE_CREATED"))
                                        {
                                            @foreach (CompareResult i in Model["SERVICE_CREATED"])
                                            {
                                                <tr>
                                                    <td>New</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((ServiceObject)i.Compare).ServiceName)</td>
                                                    <td>@(((ServiceObject)i.Compare).DisplayName)</td>
                                                    <td>@(((ServiceObject)i.Compare).StartType)</td>
                                                    <td>@(((ServiceObject)i.Compare).CurrentState)</td>
                                                </tr>
                                            }
                                        }
                                        @if (Model.ContainsKey("SERVICE_MODIFIED"))
                                        {
                                            @foreach (CompareResult i in Model["SERVICE_MODIFIED"])
                                            {
                                                <tr>
                                                    <td>Modified:Before</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((ServiceObject)i.Base).ServiceName)</td>
                                                    <td>@(((ServiceObject)i.Base).DisplayName)</td>
                                                    <td>@(((ServiceObject)i.Base).StartType)</td>
                                                    <td>@(((ServiceObject)i.Base).CurrentState)</td>
                                                </tr>
                                                <tr>
                                                    <td>Modified:After</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((ServiceObject)i.Compare).ServiceName)</td>
                                                    <td>@(((ServiceObject)i.Compare).DisplayName)</td>
                                                    <td>@(((ServiceObject)i.Compare).StartType)</td>
                                                    <td>@(((ServiceObject)i.Compare).CurrentState)</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>

                <div id="section_open_ports">
                    <h1>Open Network Ports</h1>
                    @{
                        if (Model.ContainsKey("PORT_CREATED") || Model.ContainsKey("PORT_DELETED"))
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Analysis</th>
                                            <th>Family</th>
                                            <th>Address</th>
                                            <th>Port</th>
                                            <th>Type</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ContainsKey("PORT_DELETED"))
                                        {
                                            @foreach (CompareResult i in Model["PORT_DELETED"])
                                            {
                                                <tr>
                                                    <td>Deleted</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((OpenPortObject)i.Base).family)</td>
                                                    <td>@(((OpenPortObject)i.Base).address)</td>
                                                    <td>@(((OpenPortObject)i.Base).port)</td>
                                                    <td>@(((OpenPortObject)i.Base).type)</td>
                                                </tr>
                                            }
                                        }

                                        @if (Model.ContainsKey("PORT_CREATED"))
                                        {
                                            @foreach (CompareResult i in Model["PORT_CREATED"])
                                            {
                                                <tr>
                                                    <td>New</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((OpenPortObject)i.Compare).family)</td>
                                                    <td>@(((OpenPortObject)i.Compare).address)</td>
                                                    <td>@(((OpenPortObject)i.Compare).port)</td>
                                                    <td>@(((OpenPortObject)i.Compare).type)</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>

                <div id="section_user_accounts">
                    <h1>User Accounts</h1>

                    The following user accounts were changed between runs <strong>@Model["BeforeRunId"]</strong> and <strong>@Model["AfterRunId"]</strong>.
                    @{
                        <div class="dropdown float-right show">
                            <a class="btn btn-sm btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Filter Results
                            </a>

                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item" href="#">Interesting</a>
                                <a class="dropdown-item" href="#">Uninteresting</a>
                                <a class="dropdown-item" href="#">Show All</a>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Analysis</th>
                                        <th>AccountType</th>
                                        <th>Caption</th>
                                        <th>Description</th>
                                        <th>Disabled</th>
                                        <th>Domain</th>
                                        <th>InstallDate</th>
                                        <th>LocalAccount</th>
                                        <th>Lockout</th>
                                        <th>Name</th>
                                        <th>FullName</th>
                                        <th>PasswordChangeable</th>
                                        <th>PasswordExpires</th>
                                        <th>PasswordRequired</th>
                                        <th>SID</th>
                                        <th>UID</th>
                                        <th>GID</th>
                                        <th>Inactive</th>
                                        <th>HomeDirectory</th>
                                        <th>Shell</th>
                                        <th>PasswordStorageAlgorithm</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ContainsKey("USER_DELETED"))
                                    {
                                        @foreach (CompareResult i in Model["USER_DELETED"])
                                        {
                                            <tr>
                                                <td>Deleted</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((UserAccountObject)i.Base).AccountType)</td>
                                                <td>@(((UserAccountObject)i.Base).Caption)</td>
                                                <td>@(((UserAccountObject)i.Base).Description)</td>
                                                <td>@(((UserAccountObject)i.Base).Disabled)</td>
                                                <td>@(((UserAccountObject)i.Base).Domain)</td>
                                                <td>@(((UserAccountObject)i.Base).InstallDate)</td>
                                                <td>@(((UserAccountObject)i.Base).LocalAccount)</td>
                                                <td>@(((UserAccountObject)i.Base).Lockout)</td>
                                                <td>@(((UserAccountObject)i.Base).Name)</td>
                                                <td>@(((UserAccountObject)i.Base).FullName)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordChangeable)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordExpires)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordRequired)</td>
                                                <td>@(((UserAccountObject)i.Base).SID)</td>
                                                <td>@(((UserAccountObject)i.Base).UID)</td>
                                                <td>@(((UserAccountObject)i.Base).GID)</td>
                                                <td>@(((UserAccountObject)i.Base).Inactive)</td>
                                                <td>@(((UserAccountObject)i.Base).HomeDirectory)</td>
                                                <td>@(((UserAccountObject)i.Base).Shell)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordStorageAlgorithm)</td>
                                            </tr>
                                        }
                                    }

                                    @if (Model.ContainsKey("USER_CREATED"))
                                    {
                                        @foreach (CompareResult i in Model["USER_CREATED"])
                                        {
                                            <tr>
                                                <td>New</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((UserAccountObject)i.Compare).AccountType)</td>
                                                <td>@(((UserAccountObject)i.Compare).Caption)</td>
                                                <td>@(((UserAccountObject)i.Compare).Description)</td>
                                                <td>@(((UserAccountObject)i.Compare).Disabled)</td>
                                                <td>@(((UserAccountObject)i.Compare).Domain)</td>
                                                <td>@(((UserAccountObject)i.Compare).InstallDate)</td>
                                                <td>@(((UserAccountObject)i.Compare).LocalAccount)</td>
                                                <td>@(((UserAccountObject)i.Compare).Lockout)</td>
                                                <td>@(((UserAccountObject)i.Compare).Name)</td>
                                                <td>@(((UserAccountObject)i.Compare).FullName)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordChangeable)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordExpires)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordRequired)</td>
                                                <td>@(((UserAccountObject)i.Compare).SID)</td>
                                                <td>@(((UserAccountObject)i.Compare).UID)</td>
                                                <td>@(((UserAccountObject)i.Compare).GID)</td>
                                                <td>@(((UserAccountObject)i.Compare).Inactive)</td>
                                                <td>@(((UserAccountObject)i.Compare).HomeDirectory)</td>
                                                <td>@(((UserAccountObject)i.Compare).Shell)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordStorageAlgorithm)</td>
                                            </tr>
                                        }
                                    }

                                    @if (Model.ContainsKey("USER_MODIFIED"))
                                    {
                                        @foreach (CompareResult i in Model["USER_MODIFIED"])
                                        {
                                            <tr>
                                                <td>Modified:Before</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((UserAccountObject)i.Base).AccountType)</td>
                                                <td>@(((UserAccountObject)i.Base).Caption)</td>
                                                <td>@(((UserAccountObject)i.Base).Description)</td>
                                                <td>@(((UserAccountObject)i.Base).Disabled)</td>
                                                <td>@(((UserAccountObject)i.Base).Domain)</td>
                                                <td>@(((UserAccountObject)i.Base).InstallDate)</td>
                                                <td>@(((UserAccountObject)i.Base).LocalAccount)</td>
                                                <td>@(((UserAccountObject)i.Base).Lockout)</td>
                                                <td>@(((UserAccountObject)i.Base).Name)</td>
                                                <td>@(((UserAccountObject)i.Base).FullName)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordChangeable)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordExpires)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordRequired)</td>
                                                <td>@(((UserAccountObject)i.Base).SID)</td>
                                                <td>@(((UserAccountObject)i.Base).UID)</td>
                                                <td>@(((UserAccountObject)i.Base).GID)</td>
                                                <td>@(((UserAccountObject)i.Base).Inactive)</td>
                                                <td>@(((UserAccountObject)i.Base).HomeDirectory)</td>
                                                <td>@(((UserAccountObject)i.Base).Shell)</td>
                                                <td>@(((UserAccountObject)i.Base).PasswordStorageAlgorithm)</td>
                                            </tr>
                                            <tr>
                                                <td>Modified:After</td>
                                                <td>@i.Analysis</td>
                                                <td>@(((UserAccountObject)i.Compare).AccountType)</td>
                                                <td>@(((UserAccountObject)i.Compare).Caption)</td>
                                                <td>@(((UserAccountObject)i.Compare).Description)</td>
                                                <td>@(((UserAccountObject)i.Compare).Disabled)</td>
                                                <td>@(((UserAccountObject)i.Compare).Domain)</td>
                                                <td>@(((UserAccountObject)i.Compare).InstallDate)</td>
                                                <td>@(((UserAccountObject)i.Compare).LocalAccount)</td>
                                                <td>@(((UserAccountObject)i.Compare).Lockout)</td>
                                                <td>@(((UserAccountObject)i.Compare).Name)</td>
                                                <td>@(((UserAccountObject)i.Compare).FullName)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordChangeable)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordExpires)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordRequired)</td>
                                                <td>@(((UserAccountObject)i.Compare).SID)</td>
                                                <td>@(((UserAccountObject)i.Compare).UID)</td>
                                                <td>@(((UserAccountObject)i.Compare).GID)</td>
                                                <td>@(((UserAccountObject)i.Compare).Inactive)</td>
                                                <td>@(((UserAccountObject)i.Compare).HomeDirectory)</td>
                                                <td>@(((UserAccountObject)i.Compare).Shell)</td>
                                                <td>@(((UserAccountObject)i.Compare).PasswordStorageAlgorithm)</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>

                <div id="section_registry">
                    <h1>Registry values</h1>

                    The following registry keys and values were changed between runs <strong>@Model["BeforeRunId"]</strong> and <strong>@Model["AfterRunId"]</strong>.
                    @{
                        if (Model.ContainsKey("REGISTRY_CREATED") || Model.ContainsKey("REGISTRY_MODIFIED") || Model.ContainsKey("REGISTRY_DELETED"))
                        {
                            <div class="dropdown float-right show">
                                <a class="btn btn-sm btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Filter Results
                                </a>

                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <a class="dropdown-item" href="#">Interesting</a>
                                    <a class="dropdown-item" href="#">Uninteresting</a>
                                    <a class="dropdown-item" href="#">Show All</a>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Analysis</th>
                                            <th>Key</th>
                                            <th>Subkeys (if applicable)</th>
                                            <th>Values (if a value)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ContainsKey("REGISTRY_DELETED"))
                                        {
                                            @foreach (CompareResult i in Model["REGISTRY_DELETED"])
                                            {
                                                <tr>
                                                    <td>Deleted</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((RegistryObject)i.Base).Key)</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Base).Subkeys))</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Base).Values))</td>
                                                </tr>
                                            }
                                        }

                                        @if (Model.ContainsKey("REGISTRY_CREATED"))
                                        {
                                            @foreach (CompareResult i in Model["REGISTRY_CREATED"])
                                            {
                                                <tr>
                                                    <td>New</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((RegistryObject)i.Compare).Key)</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Compare).Subkeys))</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Compare).Values))</td>
                                                </tr>
                                            }
                                        }

                                        @if (Model.ContainsKey("REGISTRY_MODIFIED"))
                                        {
                                            @foreach (CompareResult i in Model["REGISTRY_MODIFIED"])
                                            {
                                                <tr>
                                                    <td>Modified:Before</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((RegistryObject)i.Base).Key)</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Base).Subkeys))</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Base).Values))</td>
                                                </tr>
                                                <tr>
                                                    <td>Modified:After</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((RegistryObject)i.Compare).Key)</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Compare).Subkeys))</td>
                                                    <td>@JsonConvert.SerializeObject(((RegistryObject)i.Compare).Values))</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>

                <div id="section_certificates">
                    <h1>Certificate Store</h1>

                    The following Certificates were changed between runs <strong>@Model["BeforeRunId"]</strong> and <strong>@Model["AfterRunId"]</strong>.
                    @{
                        if (Model.ContainsKey("CERTIFICATE_CREATED") || Model.ContainsKey("CERTIFICATE_MODIFIED") || Model.ContainsKey("CERTIFICATE_DELETED"))
                        {
                            <div class="dropdown float-right show">
                                <a class="btn btn-sm btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Filter Results
                                </a>

                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <a class="dropdown-item" href="#">Interesting</a>
                                    <a class="dropdown-item" href="#">Uninteresting</a>
                                    <a class="dropdown-item" href="#">Show All</a>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Analysis</th>
                                            <th>Store Location</th>
                                            <th>Store Name</th>
                                            <th>Subject Name</th>
                                            <th>Certificate Hash</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ContainsKey("CERTIFICATE_DELETED"))
                                        {
                                            @foreach (CompareResult i in Model["CERTIFICATE_DELETED"])
                                            {
                                                <tr>
                                                    <td>Deleted</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((CertificateObject)i.Base).StoreLocation)</td>
                                                    <td>@(((CertificateObject)i.Base).StoreName)</td>
                                                    <td>@(((CertificateObject)i.Base).Subject)</td>
                                                    <td>@(((CertificateObject)i.Base).CertificateHashString)</td>
                                                </tr>
                                            }
                                        }

                                        @if (Model.ContainsKey("CERTIFICATE_CREATED"))
                                        {
                                            @foreach (CompareResult i in Model["CERTIFICATE_CREATED"])
                                            {
                                                <tr>
                                                    <td>Added</td>
                                                    <td>@i.Analysis</td>
                                                    <td>@(((CertificateObject)i.Compare).StoreLocation)</td>
                                                    <td>@(((CertificateObject)i.Compare).StoreName)</td>
                                                    <td>@(((CertificateObject)i.Compare).Subject)</td>
                                                    <td>@(((CertificateObject)i.Compare).CertificateHashString)</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.3/js/bootstrap.min.js" integrity="sha384-a5N7Y/aK3qNeh15eJKGWxsqtnX/wWdSZSKp+81YjTmS15nvnvxKHuzaWwXHDli+4" crossorigin="anonymous"></script>

    <script type="text/javascript">
$(document).ready(function () {
            $('a[data-internal-link="replace"]').on('click', function (e) {
                var href = $(e.target).attr('href');  // show this href
                var $t = $('div' + href);               // this element
                if ($t) {
                    $('main').html($t.html());
                }
            });
        })</script>

</body>

</html>