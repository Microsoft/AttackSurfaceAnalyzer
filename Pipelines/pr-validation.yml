name: ASA PR Validation

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Test
  jobs:
  - job: Test Windows
    pool:
      vmImage: 'windows-latest'
    steps:
    - script: 'dotnet tool install -g nbgv'
      displayName: 'Install GitVersioning'

    - task: DotNetCoreCLI@2
      displayName: 'Build Tests'
      inputs:
        projects: 'AsaTests/AsaTests.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/Tests'

    - task: VSTest@2
      displayName: 'VsTest - testAssemblies'
      inputs:
        testAssemblyVer2: AsaTests.dll
        searchFolder: '$(build.binariesdirectory)/Tests'

- stage: Build
  jobs:
  - job: Build All Platforms
    pool:
        vmImage: 'windows-latest'
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Publish ASA Windows x86 to build staging'
        inputs:
          command: publish
          projects: 'Asa/Asa.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)\windows -r win-x86'
          zipAfterPublish: true

      - task: DotNetCoreCLI@2
        displayName: 'Publish ASA Linux x64 to build staging'
        inputs:
            command: publish
            projects: 'Asa/Asa.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/linux -r linux-x64'
            zipAfterPublish: true

      - task: DotNetCoreCLI@2
        displayName: 'Publish ASA Linux x64 to build staging'
        inputs:
            command: publish
            projects: 'Asa/Asa.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/macos -r osx-x64'
            zipAfterPublish: true

      - task: securedevelopmentteam.vss-secure-development-tools.build-task-antimalware.AntiMalware@3
        displayName: 'AV Scan Artifacts'
        inputs:
          FileDirPath: '$(build.artifactstagingdirectory)'
          EnableServices: true
          TreatSignatureUpdateFailureAs: Standard

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'