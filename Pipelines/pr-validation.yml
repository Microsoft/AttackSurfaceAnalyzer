name: ASA PR Validation

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      cd $(build.sourcesdirectory)
      dir
      cd AsaTests
      dir
- task: DotNetCoreCLI@2
  displayName: 'Build Tests'
  inputs:
    projects: 'AsaTests/AsaTests.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)/Tests'
- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: AsaTest.dll
    searchFolder: '$(build.binariesdirectory)/Tests'
- task: DotNetCoreCLI@2
  displayName: 'Publish ASA Windows x86 to build staging'
  inputs:
    command: publish
    projects: 'Asa/Asa.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)\windows -r win-x86'
    zipAfterPublish: true
- task: DotNetCoreCLI@2
  displayName: 'Publish ASA Linux x64 to build staging'
  inputs:
    command: publish
    projects: 'Asa/Asa.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)\linux -r linux-x64'
    zipAfterPublish: true
- task: DotNetCoreCLI@2
  displayName: 'Publish ASA MacOs x64 to build staging'
  inputs:
    command: publish
    projects: 'Asa/Asa.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)\macos -r osx-x64'
    zipAfterPublish: true
- task: securedevelopmentteam.vss-secure-development-tools.build-task-antimalware.AntiMalware@3
  displayName: 'AV Scan Artifacts'
  inputs:
    FileDirPath: '$(build.artifactstagingdirectory)'
    EnableServices: true
    TreatSignatureUpdateFailureAs: Standard
- powershell: |
   $version = (nbgv get-version -v AssemblyInformationalVersion)
   Rename-Item -Path "$(build.binariesdirectory)\windows\Asa" -NewName "AttackSurfaceAnalyzer-windows-$version"
   Compress-Archive -Path "$(build.binariesdirectory)\windows\AttackSurfaceAnalyzer-windows-$version" -DestinationPath "$(build.artifactstagingdirectory)\AttackSurfaceAnalyzer-windows-$version.zip"
   Rename-Item -Path "$(build.binariesdirectory)\linux\Asa" -NewName "AttackSurfaceAnalyzer-linux-$version"
   Compress-Archive -Path "$(build.binariesdirectory)\linux\AttackSurfaceAnalyzer-linux-$version" -DestinationPath "$(build.artifactstagingdirectory)\AttackSurfaceAnalyzer-linux-$version.zip"
   Rename-Item -Path "$(build.binariesdirectory)\osx\Asa" -NewName "AttackSurfaceAnalyzer-macos-$version"
   Compress-Archive -Path "$(build.binariesdirectory)\osx\AttackSurfaceAnalyzer-macos-$version" -DestinationPath "$(build.artifactstagingdirectory)\AttackSurfaceAnalyzer-macos-$version.zip"
  displayName: 'Prep Artifacts'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'




- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
