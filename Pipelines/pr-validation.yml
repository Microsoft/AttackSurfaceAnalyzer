name: ASA PR Validation

trigger: none
pr:
  branches:    
    include:
    - master
    - releases/*
    exclude:
    - azure_pipelines

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

stages:
- stage: Test
  jobs:
  - job: Test_Windows
    pool:
      vmImage: 'windows-latest'
    steps:
    - script: 'dotnet tool install -g nbgv'
      displayName: 'Install GitVersioning'
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.0.100'

    - task: DotNetCoreCLI@2
      displayName: 'Build Tests'
      inputs:
        projects: 'AsaTests/AsaTests.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)/Tests'

    - task: VSTest@2
      displayName: 'Run Tests'
      inputs:
        testAssemblyVer2: AsaTests.dll
        searchFolder: '$(build.binariesdirectory)/Tests'

- stage: Build
  jobs:
  - job: Build_All_Platforms
    pool:
        vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.0.100'
        
    - task: DotNetCoreCLI@2
      displayName: 'Publish ASA Windows'
      inputs:
        command: publish
        projects: 'Asa/Asa.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/windows -r win-x86'
        zipAfterPublish: true

    - task: DotNetCoreCLI@2
      displayName: 'Publish ASA Linux'
      inputs:
          command: publish
          projects: 'Asa/Asa.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/linux -r linux-x64'
          zipAfterPublish: true

    - task: DotNetCoreCLI@2
      displayName: 'Publish ASA macOS'
      inputs:
          command: publish
          projects: 'Asa/Asa.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/macos -r osx-x64'
          zipAfterPublish: true

    - task: AntiMalware@3
      inputs:
        InputType: 'Basic'
        ScanType: 'CustomScan'
        FileDirPath: '$(Build.StagingDirectory)'
        EnableServices: true
        SupportLogOnError: false
        TreatSignatureUpdateFailureAs: 'Warning'
        SignatureFreshness: 'UpToDate'
        TreatStaleSignatureAs: 'Error'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'