### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  commentId: T:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  id: OpenPortObject
  parent: AttackSurfaceAnalyzer.ObjectTypes
  children:
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.address
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo(System.Object)
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals(System.Object)
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.family
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.port
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.processName
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString
  - AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.type
  langs:
  - csharp
  - vb
  name: OpenPortObject
  nameWithType: OpenPortObject
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  type: Class
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: OpenPortObject
    path: Objects/OpenPortObject.cs
    startLine: 9
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: 'public class OpenPortObject : IComparable'
    content.vb: >-
      Public Class OpenPortObject
          Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.address
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.address
  id: address
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: address
  nameWithType: OpenPortObject.address
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.address
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: address
    path: Objects/OpenPortObject.cs
    startLine: 11
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string address
    return:
      type: System.String
    content.vb: Public address As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.family
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.family
  id: family
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: family
  nameWithType: OpenPortObject.family
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.family
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: family
    path: Objects/OpenPortObject.cs
    startLine: 12
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string family
    return:
      type: System.String
    content.vb: Public family As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.type
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.type
  id: type
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: type
  nameWithType: OpenPortObject.type
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.type
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: type
    path: Objects/OpenPortObject.cs
    startLine: 13
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string type
    return:
      type: System.String
    content.vb: Public type As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.port
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.port
  id: port
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: port
  nameWithType: OpenPortObject.port
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.port
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: port
    path: Objects/OpenPortObject.cs
    startLine: 14
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string port
    return:
      type: System.String
    content.vb: Public port As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.processName
  commentId: F:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.processName
  id: processName
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: processName
  nameWithType: OpenPortObject.processName
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.processName
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: processName
    path: Objects/OpenPortObject.cs
    startLine: 15
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string processName
    return:
      type: System.String
    content.vb: Public processName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey
  commentId: P:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey
  id: RowKey
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: RowKey
  nameWithType: OpenPortObject.RowKey
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey
  type: Property
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RowKey
    path: Objects/OpenPortObject.cs
    startLine: 17
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string RowKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RowKey As String
  overload: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo(System.Object)
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: OpenPortObject.CompareTo(Object)
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: CompareTo
    path: Objects/OpenPortObject.cs
    startLine: 23
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo*
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals(System.Object)
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals(System.Object)
  id: Equals(System.Object)
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: OpenPortObject.Equals(Object)
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Equals
    path: Objects/OpenPortObject.cs
    startLine: 61
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode
  id: GetHashCode
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: OpenPortObject.GetHashCode()
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode()
  type: Method
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetHashCode
    path: Objects/OpenPortObject.cs
    startLine: 66
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString
  id: ToString
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: OpenPortObject.ToString()
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString()
  type: Method
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ToString
    path: Objects/OpenPortObject.cs
    startLine: 83
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson
  commentId: M:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson
  id: ToJson
  parent: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: OpenPortObject.ToJson()
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson()
  type: Method
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ToJson
    path: Objects/OpenPortObject.cs
    startLine: 88
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.ObjectTypes
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson As String
  overload: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AttackSurfaceAnalyzer.ObjectTypes
  commentId: N:AttackSurfaceAnalyzer.ObjectTypes
  name: AttackSurfaceAnalyzer.ObjectTypes
  nameWithType: AttackSurfaceAnalyzer.ObjectTypes
  fullName: AttackSurfaceAnalyzer.ObjectTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey
  name: RowKey
  nameWithType: OpenPortObject.RowKey
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.RowKey
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo
  name: CompareTo
  nameWithType: OpenPortObject.CompareTo
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals
  name: Equals
  nameWithType: OpenPortObject.Equals
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode
  name: GetHashCode
  nameWithType: OpenPortObject.GetHashCode
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString
  name: ToString
  nameWithType: OpenPortObject.ToString
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToString
- uid: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson*
  commentId: Overload:AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson
  name: ToJson
  nameWithType: OpenPortObject.ToJson
  fullName: AttackSurfaceAnalyzer.ObjectTypes.OpenPortObject.ToJson
