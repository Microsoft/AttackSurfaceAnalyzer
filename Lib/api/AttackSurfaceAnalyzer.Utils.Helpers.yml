### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.Helpers
  commentId: T:AttackSurfaceAnalyzer.Utils.Helpers
  id: Helpers
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString
  - AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName(System.String)
  - AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser(System.String)
  langs:
  - csharp
  - vb
  name: Helpers
  nameWithType: Helpers
  fullName: AttackSurfaceAnalyzer.Utils.Helpers
  type: Class
  source:
    remote:
      path: Lib/Utils/Helpers.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Helpers
    path: Utils/Helpers.cs
    startLine: 8
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public class Helpers
    content.vb: Public Class Helpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser(System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser(System.String)
  id: OpenBrowser(System.String)
  parent: AttackSurfaceAnalyzer.Utils.Helpers
  langs:
  - csharp
  - vb
  name: OpenBrowser(String)
  nameWithType: Helpers.OpenBrowser(String)
  fullName: AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser(System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Helpers.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: OpenBrowser
    path: Utils/Helpers.cs
    startLine: 10
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void OpenBrowser(string url)
    parameters:
    - id: url
      type: System.String
    content.vb: Public Shared Sub OpenBrowser(url As String)
  overload: AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName(System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName(System.String)
  id: MakeValidFileName(System.String)
  parent: AttackSurfaceAnalyzer.Utils.Helpers
  langs:
  - csharp
  - vb
  name: MakeValidFileName(String)
  nameWithType: Helpers.MakeValidFileName(String)
  fullName: AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName(System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Helpers.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: MakeValidFileName
    path: Utils/Helpers.cs
    startLine: 26
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static string MakeValidFileName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function MakeValidFileName(name As String) As String
  overload: AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString
  commentId: M:AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString
  id: GetVersionString
  parent: AttackSurfaceAnalyzer.Utils.Helpers
  langs:
  - csharp
  - vb
  name: GetVersionString()
  nameWithType: Helpers.GetVersionString()
  fullName: AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString()
  type: Method
  source:
    remote:
      path: Lib/Utils/Helpers.cs
      branch: master
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetVersionString
    path: Utils/Helpers.cs
    startLine: 34
  assemblies:
  - AttackSurfaceAnalyzerLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static string GetVersionString()
    return:
      type: System.String
    content.vb: Public Shared Function GetVersionString As String
  overload: AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser
  name: OpenBrowser
  nameWithType: Helpers.OpenBrowser
  fullName: AttackSurfaceAnalyzer.Utils.Helpers.OpenBrowser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName
  name: MakeValidFileName
  nameWithType: Helpers.MakeValidFileName
  fullName: AttackSurfaceAnalyzer.Utils.Helpers.MakeValidFileName
- uid: AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString
  name: GetVersionString
  nameWithType: Helpers.GetVersionString
  fullName: AttackSurfaceAnalyzer.Utils.Helpers.GetVersionString
