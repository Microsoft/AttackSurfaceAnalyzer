### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.Strings
  commentId: T:AttackSurfaceAnalyzer.Utils.Strings
  id: Strings
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.Strings.Get(System.String)
  - AttackSurfaceAnalyzer.Utils.Strings.Setup(System.String)
  langs:
  - csharp
  - vb
  name: Strings
  nameWithType: Strings
  fullName: AttackSurfaceAnalyzer.Utils.Strings
  type: Class
  source:
    remote:
      path: Lib/Utils/Strings.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Strings
    path: ../Lib/Utils/Strings.cs
    startLine: 13
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: 'public static class Strings : object'
    content.vb: >-
      Public Module Strings
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AttackSurfaceAnalyzer.Utils.Strings.Get(System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Strings.Get(System.String)
  id: Get(System.String)
  parent: AttackSurfaceAnalyzer.Utils.Strings
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: Strings.Get(String)
  fullName: AttackSurfaceAnalyzer.Utils.Strings.Get(System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Strings.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Get
    path: ../Lib/Utils/Strings.cs
    startLine: 21
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static string Get(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Get(key As String) As String
  overload: AttackSurfaceAnalyzer.Utils.Strings.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Strings.Setup(System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Strings.Setup(System.String)
  id: Setup(System.String)
  parent: AttackSurfaceAnalyzer.Utils.Strings
  langs:
  - csharp
  - vb
  name: Setup(String)
  nameWithType: Strings.Setup(String)
  fullName: AttackSurfaceAnalyzer.Utils.Strings.Setup(System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Strings.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Setup
    path: ../Lib/Utils/Strings.cs
    startLine: 30
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void Setup(string locale = null)
    parameters:
    - id: locale
      type: System.String
    content.vb: Public Shared Sub Setup(locale As String = Nothing)
  overload: AttackSurfaceAnalyzer.Utils.Strings.Setup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Utils.Strings.Get*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Strings.Get
  name: Get
  nameWithType: Strings.Get
  fullName: AttackSurfaceAnalyzer.Utils.Strings.Get
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Utils.Strings.Setup*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Strings.Setup
  name: Setup
  nameWithType: Strings.Setup
  fullName: AttackSurfaceAnalyzer.Utils.Strings.Setup
