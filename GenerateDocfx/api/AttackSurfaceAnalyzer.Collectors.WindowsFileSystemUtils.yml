### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  commentId: T:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  id: WindowsFileSystemUtils
  parent: AttackSurfaceAnalyzer.Collectors
  children:
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics(System.String)
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions(FileSystemInfo)
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus(System.String)
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable(System.String)
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal(System.String)
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature(System.String)
  - AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.SIGNED_EXTENSIONS
  langs:
  - csharp
  - vb
  name: WindowsFileSystemUtils
  nameWithType: WindowsFileSystemUtils
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  type: Class
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: WindowsFileSystemUtils
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 15
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: 'public class WindowsFileSystemUtils : object'
    content.vb: >-
      Public Class WindowsFileSystemUtils
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.SIGNED_EXTENSIONS
  commentId: F:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.SIGNED_EXTENSIONS
  id: SIGNED_EXTENSIONS
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: SIGNED_EXTENSIONS
  nameWithType: WindowsFileSystemUtils.SIGNED_EXTENSIONS
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.SIGNED_EXTENSIONS
  type: Field
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: SIGNED_EXTENSIONS
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 17
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public static List<string> SIGNED_EXTENSIONS
    return:
      type: List{System.String}
    content.vb: Public Shared SIGNED_EXTENSIONS As List(Of String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus(System.String)
  id: GetSignatureStatus(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: GetSignatureStatus(String)
  nameWithType: WindowsFileSystemUtils.GetSignatureStatus(String)
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetSignatureStatus
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 47
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static string GetSignatureStatus(string Path)
    parameters:
    - id: Path
      type: System.String
    return:
      type: System.String
    content.vb: Protected Shared Function GetSignatureStatus(Path As String) As String
  overload: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature(System.String)
  id: NeedsSignature(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: NeedsSignature(String)
  nameWithType: WindowsFileSystemUtils.NeedsSignature(String)
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: NeedsSignature
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 58
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static bool NeedsSignature(string Path)
    parameters:
    - id: Path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Shared Function NeedsSignature(Path As String) As Boolean
  overload: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable(System.String)
  id: IsExecutable(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: IsExecutable(String)
  nameWithType: WindowsFileSystemUtils.IsExecutable(String)
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsExecutable
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 82
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static bool IsExecutable(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsExecutable(filePath As String) As Boolean
  overload: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal(System.String)
  id: IsLocal(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: IsLocal(String)
  nameWithType: WindowsFileSystemUtils.IsLocal(String)
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsLocal
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 100
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static bool IsLocal(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Shared Function IsLocal(path As String) As Boolean
  overload: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics(System.String)
  id: GetDllCharacteristics(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: GetDllCharacteristics(String)
  nameWithType: WindowsFileSystemUtils.GetDllCharacteristics(String)
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetDllCharacteristics
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 112
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static List<DLLCHARACTERISTICS> GetDllCharacteristics(string Path)
    parameters:
    - id: Path
      type: System.String
    return:
      type: List{AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS}
    content.vb: Protected Shared Function GetDllCharacteristics(Path As String) As List(Of DLLCHARACTERISTICS)
  overload: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions(FileSystemInfo)
  commentId: M:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions(FileSystemInfo)
  id: GetFilePermissions(FileSystemInfo)
  parent: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils
  langs:
  - csharp
  - vb
  name: GetFilePermissions(FileSystemInfo)
  nameWithType: WindowsFileSystemUtils.GetFilePermissions(FileSystemInfo)
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions(FileSystemInfo)
  type: Method
  source:
    remote:
      path: Lib/Collectors/WindowsFileSystemUtils.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetFilePermissions
    path: ../Lib/Collectors/WindowsFileSystemUtils.cs
    startLine: 144
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static string GetFilePermissions(FileSystemInfo fileInfo)
    parameters:
    - id: fileInfo
      type: FileSystemInfo
    return:
      type: System.String
    content.vb: Protected Shared Function GetFilePermissions(fileInfo As FileSystemInfo) As String
  overload: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Collectors
  commentId: N:AttackSurfaceAnalyzer.Collectors
  name: AttackSurfaceAnalyzer.Collectors
  nameWithType: AttackSurfaceAnalyzer.Collectors
  fullName: AttackSurfaceAnalyzer.Collectors
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus
  name: GetSignatureStatus
  nameWithType: WindowsFileSystemUtils.GetSignatureStatus
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetSignatureStatus
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature
  name: NeedsSignature
  nameWithType: WindowsFileSystemUtils.NeedsSignature
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.NeedsSignature
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable
  name: IsExecutable
  nameWithType: WindowsFileSystemUtils.IsExecutable
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsExecutable
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal
  name: IsLocal
  nameWithType: WindowsFileSystemUtils.IsLocal
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.IsLocal
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics
  name: GetDllCharacteristics
  nameWithType: WindowsFileSystemUtils.GetDllCharacteristics
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetDllCharacteristics
- uid: List{AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS}
  commentId: '!:List{AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS}'
  definition: List`1
  name: List<DLLCHARACTERISTICS>
  nameWithType: List<DLLCHARACTERISTICS>
  fullName: List<AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS>
  nameWithType.vb: List(Of DLLCHARACTERISTICS)
  fullName.vb: List(Of AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS)
  name.vb: List(Of DLLCHARACTERISTICS)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS
    name: DLLCHARACTERISTICS
    nameWithType: DLLCHARACTERISTICS
    fullName: AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS
    name: DLLCHARACTERISTICS
    nameWithType: DLLCHARACTERISTICS
    fullName: AttackSurfaceAnalyzer.Types.DLLCHARACTERISTICS
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions
  name: GetFilePermissions
  nameWithType: WindowsFileSystemUtils.GetFilePermissions
  fullName: AttackSurfaceAnalyzer.Collectors.WindowsFileSystemUtils.GetFilePermissions
- uid: FileSystemInfo
  isExternal: true
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: FileSystemInfo
