### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  commentId: T:AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  id: RegistryMonitor
  parent: AttackSurfaceAnalyzer.Collectors
  children:
  - AttackSurfaceAnalyzer.Collectors.RegistryMonitor.#ctor
  - AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform
  - AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten(System.Object,EntryWrittenEventArgs)
  - AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start
  - AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop
  langs:
  - csharp
  - vb
  name: RegistryMonitor
  nameWithType: RegistryMonitor
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  type: Class
  source:
    remote:
      path: Lib/Collectors/RegistryMonitor.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RegistryMonitor
    path: ../Lib/Collectors/RegistryMonitor.cs
    startLine: 11
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: 'public class RegistryMonitor : BaseMonitor, PlatformRunnable'
    content.vb: >-
      Public Class RegistryMonitor
          Inherits BaseMonitor
          Implements PlatformRunnable
  inheritance:
  - System.Object
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor
  inheritedMembers:
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
  - AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.#ctor
  commentId: M:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.#ctor
  id: '#ctor'
  parent: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  langs:
  - csharp
  - vb
  name: RegistryMonitor()
  nameWithType: RegistryMonitor.RegistryMonitor()
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.RegistryMonitor()
  type: Constructor
  source:
    remote:
      path: Lib/Collectors/RegistryMonitor.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Collectors/RegistryMonitor.cs
    startLine: 17
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public RegistryMonitor()
    content.vb: Public Sub New
  overload: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten(System.Object,EntryWrittenEventArgs)
  commentId: M:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten(System.Object,EntryWrittenEventArgs)
  id: MyOnEntryWritten(System.Object,EntryWrittenEventArgs)
  parent: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  langs:
  - csharp
  - vb
  name: MyOnEntryWritten(Object, EntryWrittenEventArgs)
  nameWithType: RegistryMonitor.MyOnEntryWritten(Object, EntryWrittenEventArgs)
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten(System.Object, EntryWrittenEventArgs)
  type: Method
  source:
    remote:
      path: Lib/Collectors/RegistryMonitor.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: MyOnEntryWritten
    path: ../Lib/Collectors/RegistryMonitor.cs
    startLine: 21
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public void MyOnEntryWritten(object source, EntryWrittenEventArgs e)
    parameters:
    - id: source
      type: System.Object
    - id: e
      type: EntryWrittenEventArgs
    content.vb: Public Sub MyOnEntryWritten(source As Object, e As EntryWrittenEventArgs)
  overload: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start
  commentId: M:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start
  id: Start
  parent: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: RegistryMonitor.Start()
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start()
  type: Method
  source:
    remote:
      path: Lib/Collectors/RegistryMonitor.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Start
    path: ../Lib/Collectors/RegistryMonitor.cs
    startLine: 26
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public override void Start()
    content.vb: Public Overrides Sub Start
  overridden: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  overload: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop
  commentId: M:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop
  id: Stop
  parent: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: RegistryMonitor.Stop()
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop()
  type: Method
  source:
    remote:
      path: Lib/Collectors/RegistryMonitor.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Stop
    path: ../Lib/Collectors/RegistryMonitor.cs
    startLine: 44
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public override void Stop()
    content.vb: Public Overrides Sub Stop
  overridden: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  overload: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform
  commentId: M:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform
  id: CanRunOnPlatform
  parent: AttackSurfaceAnalyzer.Collectors.RegistryMonitor
  langs:
  - csharp
  - vb
  name: CanRunOnPlatform()
  nameWithType: RegistryMonitor.CanRunOnPlatform()
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform()
  type: Method
  source:
    remote:
      path: Lib/Collectors/RegistryMonitor.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: CanRunOnPlatform
    path: ../Lib/Collectors/RegistryMonitor.cs
    startLine: 57
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public override bool CanRunOnPlatform()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanRunOnPlatform As Boolean
  overridden: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  overload: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AttackSurfaceAnalyzer.Collectors
  commentId: N:AttackSurfaceAnalyzer.Collectors
  name: AttackSurfaceAnalyzer.Collectors
  nameWithType: AttackSurfaceAnalyzer.Collectors
  fullName: AttackSurfaceAnalyzer.Collectors
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  commentId: T:AttackSurfaceAnalyzer.Collectors.BaseMonitor
  parent: AttackSurfaceAnalyzer.Collectors
  name: BaseMonitor
  nameWithType: BaseMonitor
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
  commentId: F:AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: runId
  nameWithType: BaseMonitor.runId
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.runId
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
  commentId: F:AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: _running
  nameWithType: BaseMonitor._running
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor._running
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: RunStatus()
  nameWithType: BaseMonitor.RunStatus()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
    name: RunStatus
    nameWithType: BaseMonitor.RunStatus
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
    name: RunStatus
    nameWithType: BaseMonitor.RunStatus
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.RunStatus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.#ctor
  name: RegistryMonitor
  nameWithType: RegistryMonitor.RegistryMonitor
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.RegistryMonitor
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten
  name: MyOnEntryWritten
  nameWithType: RegistryMonitor.MyOnEntryWritten
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.MyOnEntryWritten
- uid: EntryWrittenEventArgs
  commentId: '!:EntryWrittenEventArgs'
  isExternal: true
  name: EntryWrittenEventArgs
  nameWithType: EntryWrittenEventArgs
  fullName: EntryWrittenEventArgs
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: Start()
  nameWithType: BaseMonitor.Start()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
    name: Start
    nameWithType: BaseMonitor.Start
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
    name: Start
    nameWithType: BaseMonitor.Start
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start
  name: Start
  nameWithType: RegistryMonitor.Start
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Start
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: Stop()
  nameWithType: BaseMonitor.Stop()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
    name: Stop
    nameWithType: BaseMonitor.Stop
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
    name: Stop
    nameWithType: BaseMonitor.Stop
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop
  name: Stop
  nameWithType: RegistryMonitor.Stop
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.Stop
- uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  commentId: M:AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  parent: AttackSurfaceAnalyzer.Collectors.BaseMonitor
  name: CanRunOnPlatform()
  nameWithType: BaseMonitor.CanRunOnPlatform()
  fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform()
  spec.csharp:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
    name: CanRunOnPlatform
    nameWithType: BaseMonitor.CanRunOnPlatform
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
    name: CanRunOnPlatform
    nameWithType: BaseMonitor.CanRunOnPlatform
    fullName: AttackSurfaceAnalyzer.Collectors.BaseMonitor.CanRunOnPlatform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform
  name: CanRunOnPlatform
  nameWithType: RegistryMonitor.CanRunOnPlatform
  fullName: AttackSurfaceAnalyzer.Collectors.RegistryMonitor.CanRunOnPlatform
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
