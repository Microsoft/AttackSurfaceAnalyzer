### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts
  commentId: T:AttackSurfaceAnalyzer.Utils.Win32ProcessPorts
  id: Win32ProcessPorts
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap
  langs:
  - csharp
  - vb
  name: Win32ProcessPorts
  nameWithType: Win32ProcessPorts
  fullName: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts
  type: Class
  source:
    remote:
      path: Lib/Utils/Win32OpenPortListenerHelper.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Win32ProcessPorts
    path: ../Lib/Utils/Win32OpenPortListenerHelper.cs
    startLine: 15
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  summary: "\nStatic class that returns the list of processes and the ports those processes use.\n"
  example: []
  syntax:
    content: 'public static class Win32ProcessPorts : object'
    content.vb: >-
      Public Module Win32ProcessPorts
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap
  commentId: P:AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap
  id: ProcessPortMap
  parent: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts
  langs:
  - csharp
  - vb
  name: ProcessPortMap
  nameWithType: Win32ProcessPorts.ProcessPortMap
  fullName: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap
  type: Property
  source:
    remote:
      path: Lib/Utils/Win32OpenPortListenerHelper.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ProcessPortMap
    path: ../Lib/Utils/Win32OpenPortListenerHelper.cs
    startLine: 22
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  summary: "\nA list of ProcesesPorts that contain the mapping of processes and the ports that the process uses.\n"
  example: []
  syntax:
    content: public static List<ProcessPort> ProcessPortMap { get; }
    parameters: []
    return:
      type: List{AttackSurfaceAnalyzer.Utils.ProcessPort}
    content.vb: Public Shared ReadOnly Property ProcessPortMap As List(Of ProcessPort)
  overload: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap
  name: ProcessPortMap
  nameWithType: Win32ProcessPorts.ProcessPortMap
  fullName: AttackSurfaceAnalyzer.Utils.Win32ProcessPorts.ProcessPortMap
- uid: List{AttackSurfaceAnalyzer.Utils.ProcessPort}
  commentId: '!:List{AttackSurfaceAnalyzer.Utils.ProcessPort}'
  definition: List`1
  name: List<ProcessPort>
  nameWithType: List<ProcessPort>
  fullName: List<AttackSurfaceAnalyzer.Utils.ProcessPort>
  nameWithType.vb: List(Of ProcessPort)
  fullName.vb: List(Of AttackSurfaceAnalyzer.Utils.ProcessPort)
  name.vb: List(Of ProcessPort)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AttackSurfaceAnalyzer.Utils.ProcessPort
    name: ProcessPort
    nameWithType: ProcessPort
    fullName: AttackSurfaceAnalyzer.Utils.ProcessPort
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AttackSurfaceAnalyzer.Utils.ProcessPort
    name: ProcessPort
    nameWithType: ProcessPort
    fullName: AttackSurfaceAnalyzer.Utils.ProcessPort
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
