### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Objects.Clause
  commentId: T:AttackSurfaceAnalyzer.Objects.Clause
  id: Clause
  parent: AttackSurfaceAnalyzer.Objects
  children:
  - AttackSurfaceAnalyzer.Objects.Clause.data
  - AttackSurfaceAnalyzer.Objects.Clause.field
  - AttackSurfaceAnalyzer.Objects.Clause.op
  langs:
  - csharp
  - vb
  name: Clause
  nameWithType: Clause
  fullName: AttackSurfaceAnalyzer.Objects.Clause
  type: Class
  source:
    remote:
      path: Lib/Objects/Rule.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Clause
    path: ../Lib/Objects/Rule.cs
    startLine: 27
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: 'public class Clause : object'
    content.vb: >-
      Public Class Clause
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Objects.Clause.field
  commentId: F:AttackSurfaceAnalyzer.Objects.Clause.field
  id: field
  parent: AttackSurfaceAnalyzer.Objects.Clause
  langs:
  - csharp
  - vb
  name: field
  nameWithType: Clause.field
  fullName: AttackSurfaceAnalyzer.Objects.Clause.field
  type: Field
  source:
    remote:
      path: Lib/Objects/Rule.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: field
    path: ../Lib/Objects/Rule.cs
    startLine: 29
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public string field
    return:
      type: System.String
    content.vb: Public field As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.Clause.op
  commentId: F:AttackSurfaceAnalyzer.Objects.Clause.op
  id: op
  parent: AttackSurfaceAnalyzer.Objects.Clause
  langs:
  - csharp
  - vb
  name: op
  nameWithType: Clause.op
  fullName: AttackSurfaceAnalyzer.Objects.Clause.op
  type: Field
  source:
    remote:
      path: Lib/Objects/Rule.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: op
    path: ../Lib/Objects/Rule.cs
    startLine: 30
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public OPERATION op
    return:
      type: AttackSurfaceAnalyzer.Types.OPERATION
    content.vb: Public op As OPERATION
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.Clause.data
  commentId: F:AttackSurfaceAnalyzer.Objects.Clause.data
  id: data
  parent: AttackSurfaceAnalyzer.Objects.Clause
  langs:
  - csharp
  - vb
  name: data
  nameWithType: Clause.data
  fullName: AttackSurfaceAnalyzer.Objects.Clause.data
  type: Field
  source:
    remote:
      path: Lib/Objects/Rule.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: data
    path: ../Lib/Objects/Rule.cs
    startLine: 31
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public List<string> data
    return:
      type: List{System.String}
    content.vb: Public data As List(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AttackSurfaceAnalyzer.Objects
  commentId: N:AttackSurfaceAnalyzer.Objects
  name: AttackSurfaceAnalyzer.Objects
  nameWithType: AttackSurfaceAnalyzer.Objects
  fullName: AttackSurfaceAnalyzer.Objects
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Types.OPERATION
  commentId: T:AttackSurfaceAnalyzer.Types.OPERATION
  parent: AttackSurfaceAnalyzer.Types
  name: OPERATION
  nameWithType: OPERATION
  fullName: AttackSurfaceAnalyzer.Types.OPERATION
- uid: AttackSurfaceAnalyzer.Types
  commentId: N:AttackSurfaceAnalyzer.Types
  name: AttackSurfaceAnalyzer.Types
  nameWithType: AttackSurfaceAnalyzer.Types
  fullName: AttackSurfaceAnalyzer.Types
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
