### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.CryptoHelpers
  commentId: T:AttackSurfaceAnalyzer.Utils.CryptoHelpers
  id: CryptoHelpers
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(FileStream)
  - AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(System.String)
  langs:
  - csharp
  - vb
  name: CryptoHelpers
  nameWithType: CryptoHelpers
  fullName: AttackSurfaceAnalyzer.Utils.CryptoHelpers
  type: Class
  source:
    remote:
      path: Lib/Utils/CryptoHelpers.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: CryptoHelpers
    path: ../Lib/Utils/CryptoHelpers.cs
    startLine: 10
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: 'public class CryptoHelpers : object'
    content.vb: >-
      Public Class CryptoHelpers
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(System.String)
  id: CreateHash(System.String)
  parent: AttackSurfaceAnalyzer.Utils.CryptoHelpers
  langs:
  - csharp
  - vb
  name: CreateHash(String)
  nameWithType: CryptoHelpers.CreateHash(String)
  fullName: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/CryptoHelpers.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: CreateHash
    path: ../Lib/Utils/CryptoHelpers.cs
    startLine: 12
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static string CreateHash(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CreateHash(input As String) As String
  overload: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(FileStream)
  commentId: M:AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(FileStream)
  id: CreateHash(FileStream)
  parent: AttackSurfaceAnalyzer.Utils.CryptoHelpers
  langs:
  - csharp
  - vb
  name: CreateHash(FileStream)
  nameWithType: CryptoHelpers.CreateHash(FileStream)
  fullName: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash(FileStream)
  type: Method
  source:
    remote:
      path: Lib/Utils/CryptoHelpers.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: CreateHash
    path: ../Lib/Utils/CryptoHelpers.cs
    startLine: 24
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static string CreateHash(FileStream stream)
    parameters:
    - id: stream
      type: FileStream
    return:
      type: System.String
    content.vb: Public Shared Function CreateHash(stream As FileStream) As String
  overload: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash
  name: CreateHash
  nameWithType: CryptoHelpers.CreateHash
  fullName: AttackSurfaceAnalyzer.Utils.CryptoHelpers.CreateHash
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FileStream
  commentId: '!:FileStream'
  isExternal: true
  name: FileStream
  nameWithType: FileStream
  fullName: FileStream
