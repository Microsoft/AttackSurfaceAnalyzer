### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher
  commentId: T:AttackSurfaceAnalyzer.Utils.FileWatcher
  id: FileWatcher
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor
  - AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String)
  - AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs})
  - AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs},NotifyFilters,System.Boolean)
  - AttackSurfaceAnalyzer.Utils.FileWatcher.EventList
  - AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning
  - AttackSurfaceAnalyzer.Utils.FileWatcher.Start
  - AttackSurfaceAnalyzer.Utils.FileWatcher.Stop
  langs:
  - csharp
  - vb
  name: FileWatcher
  nameWithType: FileWatcher
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher
  type: Class
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: FileWatcher
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 10
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: 'public class FileWatcher : object'
    content.vb: >-
      Public Class FileWatcher
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.EventList
  commentId: F:AttackSurfaceAnalyzer.Utils.FileWatcher.EventList
  id: EventList
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: EventList
  nameWithType: FileWatcher.EventList
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.EventList
  type: Field
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: EventList
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 14
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public readonly List<EventArgs> EventList
    return:
      type: List{EventArgs}
    content.vb: Public ReadOnly EventList As List(Of EventArgs)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor
  id: '#ctor'
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: FileWatcher()
  nameWithType: FileWatcher.FileWatcher()
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher()
  type: Constructor
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 37
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public FileWatcher()
    content.vb: Public Sub New
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String)
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String)
  id: '#ctor(String)'
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: FileWatcher(String)
  nameWithType: FileWatcher.FileWatcher(String)
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher(String)
  type: Constructor
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 43
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public FileWatcher(String DirectoryName)
    parameters:
    - id: DirectoryName
      type: String
    content.vb: Public Sub New(DirectoryName As String)
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs})
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs})
  id: '#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs})'
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: FileWatcher(String, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>)
  nameWithType: FileWatcher.FileWatcher(String, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>)
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher(String, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>)
  type: Constructor
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 49
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public FileWatcher(String DirectoryName, Action<EventArgs> OnChangedAction, Action<EventArgs> OnCreatedAction, Action<EventArgs> OnDeletedAction, Action<EventArgs> OnRenamedAction)
    parameters:
    - id: DirectoryName
      type: String
    - id: OnChangedAction
      type: Action{EventArgs}
    - id: OnCreatedAction
      type: Action{EventArgs}
    - id: OnDeletedAction
      type: Action{EventArgs}
    - id: OnRenamedAction
      type: Action{EventArgs}
    content.vb: Public Sub New(DirectoryName As String, OnChangedAction As Action(Of EventArgs), OnCreatedAction As Action(Of EventArgs), OnDeletedAction As Action(Of EventArgs), OnRenamedAction As Action(Of EventArgs))
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor*
  nameWithType.vb: FileWatcher.FileWatcher(String, Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher(String, Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs))
  name.vb: FileWatcher(String, Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs))
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs},NotifyFilters,System.Boolean)
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs},NotifyFilters,System.Boolean)
  id: '#ctor(String,Action{EventArgs},Action{EventArgs},Action{EventArgs},Action{EventArgs},NotifyFilters,System.Boolean)'
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: FileWatcher(String, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, NotifyFilters, Boolean)
  nameWithType: FileWatcher.FileWatcher(String, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, NotifyFilters, Boolean)
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher(String, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, Action<EventArgs>, NotifyFilters, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 55
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public FileWatcher(String DirectoryName, Action<EventArgs> OnChangedAction, Action<EventArgs> OnCreatedAction, Action<EventArgs> OnDeletedAction, Action<EventArgs> OnRenamedAction, NotifyFilters NotifyFilters, bool IncludeSubdirectories)
    parameters:
    - id: DirectoryName
      type: String
    - id: OnChangedAction
      type: Action{EventArgs}
    - id: OnCreatedAction
      type: Action{EventArgs}
    - id: OnDeletedAction
      type: Action{EventArgs}
    - id: OnRenamedAction
      type: Action{EventArgs}
    - id: NotifyFilters
      type: NotifyFilters
    - id: IncludeSubdirectories
      type: System.Boolean
    content.vb: Public Sub New(DirectoryName As String, OnChangedAction As Action(Of EventArgs), OnCreatedAction As Action(Of EventArgs), OnDeletedAction As Action(Of EventArgs), OnRenamedAction As Action(Of EventArgs), NotifyFilters As NotifyFilters, IncludeSubdirectories As Boolean)
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor*
  nameWithType.vb: FileWatcher.FileWatcher(String, Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), NotifyFilters, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher(String, Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), NotifyFilters, System.Boolean)
  name.vb: FileWatcher(String, Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), Action(Of EventArgs), NotifyFilters, Boolean)
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning
  id: IsRunning
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: IsRunning()
  nameWithType: FileWatcher.IsRunning()
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning()
  type: Method
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsRunning
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 79
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public bool IsRunning()
    return:
      type: System.Boolean
    content.vb: Public Function IsRunning As Boolean
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.Start
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.Start
  id: Start
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: FileWatcher.Start()
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.Start()
  type: Method
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Start
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 84
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.Stop
  commentId: M:AttackSurfaceAnalyzer.Utils.FileWatcher.Stop
  id: Stop
  parent: AttackSurfaceAnalyzer.Utils.FileWatcher
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: FileWatcher.Stop()
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.Stop()
  type: Method
  source:
    remote:
      path: Lib/Utils/FileWatcher.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Stop
    path: ../Lib/Utils/FileWatcher.cs
    startLine: 89
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: AttackSurfaceAnalyzer.Utils.FileWatcher.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: List{EventArgs}
  commentId: '!:List{EventArgs}'
  definition: List`1
  name: List<EventArgs>
  nameWithType: List<EventArgs>
  fullName: List<EventArgs>
  nameWithType.vb: List(Of EventArgs)
  fullName.vb: List(Of EventArgs)
  name.vb: List(Of EventArgs)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.FileWatcher.#ctor
  name: FileWatcher
  nameWithType: FileWatcher.FileWatcher
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.FileWatcher
- uid: String
  isExternal: true
  name: String
  nameWithType: String
  fullName: String
- uid: Action{EventArgs}
  commentId: '!:Action{EventArgs}'
  definition: Action`1
  name: Action<EventArgs>
  nameWithType: Action<EventArgs>
  fullName: Action<EventArgs>
  nameWithType.vb: Action(Of EventArgs)
  fullName.vb: Action(Of EventArgs)
  name.vb: Action(Of EventArgs)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NotifyFilters
  isExternal: true
  name: NotifyFilters
  nameWithType: NotifyFilters
  fullName: NotifyFilters
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning
  name: IsRunning
  nameWithType: FileWatcher.IsRunning
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.IsRunning
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.Start*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.FileWatcher.Start
  name: Start
  nameWithType: FileWatcher.Start
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.Start
- uid: AttackSurfaceAnalyzer.Utils.FileWatcher.Stop*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.FileWatcher.Stop
  name: Stop
  nameWithType: FileWatcher.Stop
  fullName: AttackSurfaceAnalyzer.Utils.FileWatcher.Stop
