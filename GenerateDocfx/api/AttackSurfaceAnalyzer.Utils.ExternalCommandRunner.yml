### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner
  commentId: T:AttackSurfaceAnalyzer.Utils.ExternalCommandRunner
  id: ExternalCommandRunner
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand(System.String,System.String[])
  langs:
  - csharp
  - vb
  name: ExternalCommandRunner
  nameWithType: ExternalCommandRunner
  fullName: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner
  type: Class
  source:
    remote:
      path: Lib/Utils/ExternalCommandRunner.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ExternalCommandRunner
    path: ../Lib/Utils/ExternalCommandRunner.cs
    startLine: 6
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: 'public static class ExternalCommandRunner : object'
    content.vb: >-
      Public Module ExternalCommandRunner
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand(System.String,System.String[])
  commentId: M:AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand(System.String,System.String[])
  id: RunExternalCommand(System.String,System.String[])
  parent: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner
  langs:
  - csharp
  - vb
  name: RunExternalCommand(String, String[])
  nameWithType: ExternalCommandRunner.RunExternalCommand(String, String[])
  fullName: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand(System.String, System.String[])
  type: Method
  source:
    remote:
      path: Lib/Utils/ExternalCommandRunner.cs
      branch: gfs/FunctionalTests
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RunExternalCommand
    path: ../Lib/Utils/ExternalCommandRunner.cs
    startLine: 9
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static string RunExternalCommand(string command, params string[] args)
    parameters:
    - id: command
      type: System.String
    - id: args
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Shared Function RunExternalCommand(command As String, ParamArray args As String()) As String
  overload: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand*
  nameWithType.vb: ExternalCommandRunner.RunExternalCommand(String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand(System.String, System.String())
  name.vb: RunExternalCommand(String, String())
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand
  name: RunExternalCommand
  nameWithType: ExternalCommandRunner.RunExternalCommand
  fullName: AttackSurfaceAnalyzer.Utils.ExternalCommandRunner.RunExternalCommand
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
